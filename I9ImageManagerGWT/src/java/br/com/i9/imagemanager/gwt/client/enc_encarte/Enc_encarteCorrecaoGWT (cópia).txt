/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.i9.imagemanager.gwt.client.enc_encarte;

import br.com.i9.imagemanager.gwt.client.Constantes;
import br.com.i9.imagemanager.gwt.client.easynet.EasyAccessURL;
import br.com.i9.imagemanager.gwt.client.easynet.IListenetResponse;
import br.com.i9.imagemanager.gwt.client.icons.ExampleIcons;
import com.extjs.gxt.ui.client.Style.LayoutRegion;
import com.extjs.gxt.ui.client.Style.Orientation;
import com.extjs.gxt.ui.client.Style.Scroll;
import com.extjs.gxt.ui.client.event.ButtonEvent;
import com.extjs.gxt.ui.client.event.Events;
import com.extjs.gxt.ui.client.event.Listener;
import com.extjs.gxt.ui.client.widget.ContentPanel;
import com.extjs.gxt.ui.client.widget.Info;
import com.extjs.gxt.ui.client.widget.Window;
import com.extjs.gxt.ui.client.widget.button.Button;
import com.extjs.gxt.ui.client.widget.button.ButtonGroup;
import com.extjs.gxt.ui.client.widget.button.ToggleButton;
import com.extjs.gxt.ui.client.widget.form.TextArea;
import com.extjs.gxt.ui.client.widget.layout.BorderLayout;
import com.extjs.gxt.ui.client.widget.layout.BorderLayoutData;
import com.extjs.gxt.ui.client.widget.layout.FillLayout;
import com.extjs.gxt.ui.client.widget.layout.FitLayout;
import com.extjs.gxt.ui.client.widget.layout.RowLayout;
import com.extjs.gxt.ui.client.widget.layout.TableLayout;
import com.google.gwt.core.client.GWT;
import com.google.gwt.event.dom.client.ClickEvent;
import com.google.gwt.event.dom.client.ClickHandler;
import com.google.gwt.json.client.JSONValue;
import com.google.gwt.user.client.Timer;
import com.google.gwt.user.client.ui.Image;
import java.util.HashMap;
import org.vaadin.gwtgraphics.client.DrawingArea;
import org.vaadin.gwtgraphics.client.shape.Circle;
import org.vaadin.gwtgraphics.client.shape.Text;

/**
 *
 * @author geoleite
 */
public class Enc_encarteCorrecaoGWT extends Window {

    private ExampleIcons ICONS = GWT.create(ExampleIcons.class);
    private String urlImage = Constantes.URL + "i9im/public/encarte/downloadEncarte.jsp";
    private Image img = new Image(urlImage);
    private Button btn = new Button("");
    private BorderLayoutData bldEast = new BorderLayoutData(LayoutRegion.EAST, 80, 80, 80);
    private BorderLayoutData bldCenter = new BorderLayoutData(LayoutRegion.CENTER);
    private ContentPanel cpEast = new ContentPanel();
    private ContentPanel cpCenter = new ContentPanel();
    private ToggleButton tgbPreco = new ToggleButton("Preco");
    private ToggleButton tgbPosicao = new ToggleButton("Posição");
    private ToggleButton tgbSelo = new ToggleButton("Selo");
    private ButtonGroup btgGrupo = new ButtonGroup(1);
    private org.vaadin.gwtgraphics.client.Image image;
    //private GWTCanvas canvas;
    private DrawingArea canvas = new DrawingArea(400, 400);

    public Enc_encarteCorrecaoGWT() {
        //setBodyStyle("background: url(encarte/01.jpg);");

        setModal(true);
        setHeading("Correção de Encarte: Encarte 01");
        setScrollMode(Scroll.ALWAYS);

        //setLayout(new RowLayout(Orientation.VERTICAL));
        setLayout(new BorderLayout());
        add(cpEast, bldEast);
        add(cpCenter, bldCenter);
        cpCenter.setHeaderVisible(false);
        cpEast.setHeaderVisible(false);
        cpCenter.setScrollMode(Scroll.AUTO);
        cpCenter.add(canvas);
        cpEast.setLayout(new FillLayout(Orientation.VERTICAL));
        tgbPreco.setToggleGroup("grupo1");
        tgbPosicao.setToggleGroup("grupo1");
        tgbSelo.setToggleGroup("grupo1");
        btgGrupo.add(tgbPreco);
        btgGrupo.add(tgbPosicao);
        btgGrupo.add(tgbSelo);
        cpEast.add(btgGrupo);

        Timer timer = new Timer() {

            @Override
            public void run() {
                //Enc_encarteCorrecaoGWT.this.maximize();
                //setPagePosition(10, 10);
                canvas.setWidth(img.getWidth());
                canvas.setHeight(img.getHeight());
                image = new org.vaadin.gwtgraphics.client.Image(0, 0, img.getWidth(), img.getHeight(), urlImage);

                image.addClickHandler(new ClickHandler() {

                    public void onClick(ClickEvent event) {
                        int x = event.getClientX();// + Enc_encarteCorrecaoGWT.this.getHScrollPosition();
                        int y = event.getClientY();// + Enc_encarteCorrecaoGWT.this.getVScrollPosition();
                        final Window win = new Window();
                        final TextArea ta = new TextArea();
                        win.setLayout(new FitLayout());
                        win.add(ta);
                        Button btnSalvar = new Button("Salvar");
                        Button btnFechar = new Button("Fechar");
                        final Button btnExcluir = new Button("Excluir");
                        btnExcluir.setVisible(false);
                        final int posX = x + Enc_encarteCorrecaoGWT.this.getHScrollPosition() + cpCenter.getHScrollPosition();
                        final int posY = y + Enc_encarteCorrecaoGWT.this.getVScrollPosition() + cpCenter.getVScrollPosition();

                        btnSalvar.addListener(Events.OnClick, new Listener<ButtonEvent>() {

                            public void handleEvent(ButtonEvent be) {
                                try {
                                    Text text = new Text(posX, posY, ta.getValue());
                                    text.addClickHandler(new ClickHandler() {

                                        public void onClick(ClickEvent event) {
                                            final Text text = (Text) event.getSource();
                                            ta.setValue(text.getText());
                                            btnExcluir.setVisible(true);
                                            btnExcluir.addListener(Events.OnClick, new Listener<ButtonEvent>() {
                                                public void handleEvent(ButtonEvent be) {
                                                    canvas.remove(text);
                                                    win.setVisible(false);
                                                }
                                            });

                                            win.setVisible(true);
                                        }
                                    });
                                    canvas.add(text);
                                    EasyAccessURL access = new EasyAccessURL(new IListenetResponse() {

                                        public void read(JSONValue jsonValue) {
                                        }
                                    });
                                    HashMap<String, String> param = new HashMap<String, String>();
                                    param.put("op", "salvarComentario");
                                    param.put("encarteT.x", posX + "");
                                    param.put("encarteT.y", posY + "");
                                    param.put("encarteT.comentario", ta.getValue());
                                    access.accessJSonMap(Constantes.URL + "i9im/public/encarte/encarteSalvarComentario.jsp", param);
                                    Info.display("Enviando", "Salvando comentário");
                                    layout();
                                    win.setVisible(false);
                                } catch (Exception e) {
                                }
                            }
                        });
                        btnFechar.addListener(Events.OnClick, new Listener<ButtonEvent>() {

                            public void handleEvent(ButtonEvent be) {
                                win.setVisible(false);
                            }
                        });
                        btnSalvar.setIcon(ICONS.atualizar());
                        btnFechar.setIcon(ICONS.exit());
                        btnExcluir.setIcon(ICONS.delete());
                        win.addButton(btnSalvar);
                        win.addButton(btnFechar);
                        win.addButton(btnExcluir);
                        win.setModal(true);

                        //cp.setBodyStyle("position: absolute; filter: alpha(opacity=50); opacity: .50;");
                        win.setBodyStyle("filter: alpha(opacity=50); opacity: .50;");
                        win.setSize(300, 200);
                        win.setPagePosition(x, y);
                        win.show();
                        Info.display("Clique", x + "," + y + " Scroll:" + Enc_encarteCorrecaoGWT.this.getVScrollPosition());
                        Enc_encarteCorrecaoGWT.this.layout();
                    }
                });



                canvas.add(image);
                //Circle circle = new Circle(100, 100, 200);
                //circle.setFillColor("red");
                //canvas.add(circle);

                //Info.display("DEBUG", img.getWidth() + " " + img.getHeight());
//                Enc_encarteCorrecaoGWT.this.setSize(img.getWidth() + 20, img.getHeight());
                Enc_encarteCorrecaoGWT.this.setSize(img.getWidth() + 110, com.google.gwt.user.client.Window.getClientHeight() - 50);
                Enc_encarteCorrecaoGWT.this.layout();
            }
        };
        timer.schedule(2000);
    }
}
